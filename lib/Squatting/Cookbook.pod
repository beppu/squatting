=head1 NAME

Squatting::Cookbook - Web Development Techniques for Squatting

=head1 INTRODUCTION

Squatting exists, because I fell in love with Camping's API, and I couldn't
bear the thought of building another site using some other API.  It's a truly
beautiful and concise API, and I hope that other Perl programmers may be able
to appreciate it as well.

I hope you will be able to see how far a tiny bit of code can take you.

=head2 Anatomy of a Squatting Application

=head2 Special Powers of Continuity


=head1 PROGRAMMING TECHNIQUES

=head2 COMET

=head3 Event Architecture

The L<Continuity> backend is the only one that will currently allow you to use
COMET-based techniques.

=head3 RESTless Controllers


=head2 How to Set Up Sessions

=head3 Continuity and In-Memory Sessions

=head3 Without Continuity


=head2 How to Use Various Templating Systems With Squatting

=head3 HTML::AsSubs

=head3 Tenjin

=head3 Template::Toolkit

=head3 HTML::Mason

=head3 HTML::Template


=head2 How to Internationalize and Localize Squatting Apps


=head2 How to Compose Multiple Squatting Apps Into One App

  App->mount('AnotherApp', '/prefix');


=head2 How to Embed a Squatting App Into Other Frameworks

In order to embed a Squatting app into an app written in another
framework, we need to be able to do the following things.

=over 4

=item get incoming CGI parameters

=item get incoming HTTP request headers

=item get incoming HTTP method

=item set outgoing HTTP status

=item set outgoing HTTP response headers

=item set outgoing content

=back

If we can do all these things, Squatting can make itself at home.
Here are some concrete examples to get you started.

=head3 Catalyst

=head3 HTML::Mason

=head3 Raw mod_perl1

=head3 Raw mod_perl2

=head3 CGI


=head1 DEPLOYMENT TECHNIQUES

=head2 Let Squatting+Continuity Own Port 80

This is the simplest thing you could possibly do, but it's also somewhat
limiting.

=head2 Reverse Proxying to Squatting+Continuity w/ Perlbal

=head2 Reverse Proxying to Squatting+Continuity w/ ngingx

=head2 Piggy-Backing on Top of Other Frameworks

If you've embedded a Squatting app into another application, the rules and
conventions governing the other application's framework take precedence.
Follow their deployment guidelines, and you should be fine.


=head1 SCALING TECHNIQUES

This section is for those who wish to scale Squatting apps that are using a
Continuity foundation.  If any part of your site is RESTless and stateful, and
you've suddenly got a lot of traffic to your site, this section is for you.

=head2 Session Affinity with Multiple Instances

TODO

=head2 Linux OpenSSI

TODO

=head2 DragonFlyBSD Single Image Cluster

This is currently science fiction.


=cut
